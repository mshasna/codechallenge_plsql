create table part (
part_no number(6),
part_name char(1),
in_stock varchar(90),
part_price number(6,2),
part_desc varchar2(50)
);


insert into part values(110,'L',15,190,'A');
insert into part values(111,'M',10,210,'B');
insert into part values(112,'N',20,200,'C');
insert into part values(113,'0',25,210,'D');
insert into part values(114,'P',22,220,'E');


1) PROCEDURE
create or replace procedure question1(I in number)
is
cursor C1 is select * from part where part_no=1;
emp c1%rowtype;
begin
open c1;
loop
fetch c1 into emp;
exit when c1%notfound;
DBMS_output.put_line(emp.part_no|| '  ' || emp.part_name|| '  '||
emp.in_stock|| '  '||emp.part_price||' ' || emp.part_desc);
end loop;
end;


2)create table Back_up(
part_no number(6),
part_name varchar(20),
modify_date date);


create or replace trigger backup_trigger
After insert or update or delete  on part
for each row
declare 
cursor c is select * from part;
begin
if updating then
insert into Back_up values(:new.part_no,:new.part_price,sysdate);
endÂ if;
end;




3) 
create or replace procedure question3
 is
 cursor c1 is select * from part;
 emp c1%rowtype;
 begin
 open c1;
 loop
 fetch c1 into emp;
 if emp.in_stock<16 then
 update part set part_price=250;
 end if;
 end loop;
 end;


4) 
 set serveroutout on;
 begin
 for I in (select * from part)
 loop
 DBMS_output.put_line(i.part_name);
 end loop;
 end;
